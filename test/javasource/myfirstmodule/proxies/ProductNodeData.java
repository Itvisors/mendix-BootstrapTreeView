// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class ProductNodeData extends myfirstmodule.proxies.ProductTreeNodeData
{
	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "MyFirstModule.ProductNodeData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Caption("Caption"),
		NodeClass("NodeClass"),
		Key("Key"),
		ProductNodeData_Product("MyFirstModule.ProductNodeData_Product"),
		ProductTreeNodeData_ProductTreeWidgetData("MyFirstModule.ProductTreeNodeData_ProductTreeWidgetData"),
		ParentNode("MyFirstModule.ParentNode"),
		TreeViewNodeData_TreeViewWidgetData("MyFirstModule.TreeViewNodeData_TreeViewWidgetData");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public ProductNodeData(IContext context)
	{
		this(context, Core.instantiate(context, "MyFirstModule.ProductNodeData"));
	}

	protected ProductNodeData(IContext context, IMendixObject productNodeDataMendixObject)
	{
		super(context, productNodeDataMendixObject);
		if (!Core.isSubClassOf("MyFirstModule.ProductNodeData", productNodeDataMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a MyFirstModule.ProductNodeData");
	}

	/**
	 * @deprecated Use 'new ProductNodeData(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductNodeData create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "MyFirstModule.ProductNodeData");
		return new myfirstmodule.proxies.ProductNodeData(context, mendixObject);
	}

	/**
	 * @deprecated Use 'ProductNodeData.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductNodeData initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return myfirstmodule.proxies.ProductNodeData.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.ProductNodeData initialize(IContext context, IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.ProductNodeData(context, mendixObject);
	}

	public static myfirstmodule.proxies.ProductNodeData load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.ProductNodeData.initialize(context, mendixObject);
	}

	/**
	 * @return value of ProductNodeData_Product
	 */
	public final myfirstmodule.proxies.Product getProductNodeData_Product() throws CoreException
	{
		return getProductNodeData_Product(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductNodeData_Product
	 */
	public final myfirstmodule.proxies.Product getProductNodeData_Product(IContext context) throws CoreException
	{
		myfirstmodule.proxies.Product result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ProductNodeData_Product.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Product.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ProductNodeData_Product
	 * @param productnodedata_product
	 */
	public final void setProductNodeData_Product(myfirstmodule.proxies.Product productnodedata_product)
	{
		setProductNodeData_Product(getContext(), productnodedata_product);
	}

	/**
	 * Set value of ProductNodeData_Product
	 * @param context
	 * @param productnodedata_product
	 */
	public final void setProductNodeData_Product(IContext context, myfirstmodule.proxies.Product productnodedata_product)
	{
		if (productnodedata_product == null)
			getMendixObject().setValue(context, MemberNames.ProductNodeData_Product.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ProductNodeData_Product.toString(), productnodedata_product.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.ProductNodeData that = (myfirstmodule.proxies.ProductNodeData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "MyFirstModule.ProductNodeData";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

/**
 * 
 */
public class ProductTreeNodeData extends myfirstmodule.proxies.TreeViewNodeData
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.ProductTreeNodeData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Caption("Caption"),
		NodeClass("NodeClass"),
		Key("Key"),
		ProductTreeNodeData_ProductTreeWidgetData("MyFirstModule.ProductTreeNodeData_ProductTreeWidgetData"),
		ParentNode("MyFirstModule.ParentNode"),
		TreeViewNodeData_TreeViewWidgetData("MyFirstModule.TreeViewNodeData_TreeViewWidgetData");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ProductTreeNodeData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.ProductTreeNodeData"));
	}

	protected ProductTreeNodeData(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject productTreeNodeDataMendixObject)
	{
		super(context, productTreeNodeDataMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.ProductTreeNodeData", productTreeNodeDataMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.ProductTreeNodeData");
	}

	/**
	 * @deprecated Use 'ProductTreeNodeData.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductTreeNodeData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.ProductTreeNodeData.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.ProductTreeNodeData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("MyFirstModule.ProductGroupNodeData", mendixObject.getType()))
			return myfirstmodule.proxies.ProductGroupNodeData.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("MyFirstModule.ProductNodeData", mendixObject.getType()))
			return myfirstmodule.proxies.ProductNodeData.initialize(context, mendixObject);

		return new myfirstmodule.proxies.ProductTreeNodeData(context, mendixObject);
	}

	public static myfirstmodule.proxies.ProductTreeNodeData load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.ProductTreeNodeData.initialize(context, mendixObject);
	}

	/**
	 * @return value of ProductTreeNodeData_ProductTreeWidgetData
	 */
	public final myfirstmodule.proxies.ProductTreeWidgetData getProductTreeNodeData_ProductTreeWidgetData() throws com.mendix.core.CoreException
	{
		return getProductTreeNodeData_ProductTreeWidgetData(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductTreeNodeData_ProductTreeWidgetData
	 */
	public final myfirstmodule.proxies.ProductTreeWidgetData getProductTreeNodeData_ProductTreeWidgetData(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.ProductTreeWidgetData result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ProductTreeNodeData_ProductTreeWidgetData.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.ProductTreeWidgetData.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ProductTreeNodeData_ProductTreeWidgetData
	 * @param producttreenodedata_producttreewidgetdata
	 */
	public final void setProductTreeNodeData_ProductTreeWidgetData(myfirstmodule.proxies.ProductTreeWidgetData producttreenodedata_producttreewidgetdata)
	{
		setProductTreeNodeData_ProductTreeWidgetData(getContext(), producttreenodedata_producttreewidgetdata);
	}

	/**
	 * Set value of ProductTreeNodeData_ProductTreeWidgetData
	 * @param context
	 * @param producttreenodedata_producttreewidgetdata
	 */
	public final void setProductTreeNodeData_ProductTreeWidgetData(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.ProductTreeWidgetData producttreenodedata_producttreewidgetdata)
	{
		if (producttreenodedata_producttreewidgetdata == null)
			getMendixObject().setValue(context, MemberNames.ProductTreeNodeData_ProductTreeWidgetData.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ProductTreeNodeData_ProductTreeWidgetData.toString(), producttreenodedata_producttreewidgetdata.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.ProductTreeNodeData that = (myfirstmodule.proxies.ProductTreeNodeData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.ProductTreeNodeData";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
